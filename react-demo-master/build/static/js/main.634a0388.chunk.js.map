{"version":3,"sources":["commons/api/rest-client.js","commons/styles/project-style.css","commons/images/image0_0.jpg","commons/images/Dalle3.webp","commons/images/Dalle2.webp","commons/images/TsunamyIcon.png","commons/images/Dalle1.webp","serviceWorker.js","pages/LoginPage.js","commons/hosts.js","user/api/user-api.js","pages/AdminPage.js","pages/ClientPage.js","user/components/PrivateRoute.js","pages/UnauthorizedPage.js","navigation-bar.js","home/home.js","commons/errorhandling/error-page.js","app.js","index.js"],"names":["module","exports","performRequest","request","callback","fetch","then","response","text","json","JSON","parse","status","error","catch","err","body","dropdown","pagetitle","generalcontainer","divBtn","home","chartdisplay","background-image","back","titleSubtitleContainer","errorTitle","errorText","subtitle","cardLabelContainer","cardLabel","cardSubtitle","charttitle","paragraph","title","search","next","leftUpCorner","leftDownCorner","chartTitle","chartLabel","rightAllignelement","leftAllignelement","rowDisplay","referencePricesGraphDisplay","middleAllign","container","parentOf2Tables","leftCorner","rightCorner","columnDisplayDayAhead","monitoredDataTable","placeOrderButton","tablesInRow","rowStyle","marginForColumn","cardMargin","rightPositionedTable","tableColors","__webpack_require__","p","Boolean","window","location","hostname","match","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","backgroundStyle","backgroundImage","concat","BackgroundImg","backgroundPosition","backgroundSize","backgroundRepeat","width","height","display","alignItems","justifyContent","formContainerStyle","backgroundColor","padding","borderRadius","boxShadow","textAlign","LoginPage","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","navigate","useNavigate","handleLogin","_ref","_asyncToGenerator","_callee","requestBody","data","_context","headers","Content-Type","stringify","ok","console","log","localStorage","setItem","userId","role","token","alert","t0","apply","arguments","React","createElement","style","placeholder","onChange","target","onClick","HOST","users_api","devices_api","endpoint","user","userWithSync","device","getUsers","Request","Authorization","getItem","url","RestApiClient","result","updateUser","id","Accept","getDevices","minHeight","flexDirection","contentStyle","color","AdminPage","users","setUsers","devices","setDevices","_useState5","_useState6","activeSection","setActiveSection","_useState7","_useState8","userMap","setUserMap","_useState9","_useState10","editingPasswordUserId","setEditingPasswordUserId","_useState11","_useState12","_useState13","_useState14","newPassword","setNewPassword","useEffect","Array","isArray","userResponse","userMapTemp","deviceResponse","handleInputChange","itemId","field","isUser","undefined","prevUsers","map","_objectSpread","_defineProperty","prevDevices","handleBlur","item","updateDevice","handleInsert","insertDeviceNoUser","description","address","maxHourlyEnergyConsumption","userID","insertUserWithSync","handleDelete","deviceId","deleteDevice","filter","deleteUser","className","key","onBlur","userToUpdate","find","ClientPage","userName","getDevicesByUserId","PrivateRoute","children","roles","includes","Navigate","to","UnauthorizedPage","textStyle","textDecoration","NavigationBar","Navbar","light","expand","NavbarBrand","href","src","logo","Nav","navbar","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","NavLink","textShadow","Home","_React$Component","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","_inherits","_createClass","Jumbotron","fluid","Container","Component","ErrorPage","styles","App","isAuthenticated","Router","Routes","Route","path","element","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0EAqBAA,EAAOC,QAAU,CACbC,eAtBJ,SAAwBC,EAASC,GAC7BC,MAAMF,GACDG,KAAK,SAASC,GAEX,OAAOA,EAASC,OAAOF,KAAK,SAACE,GACzB,IAEI,IAAMC,EAAOC,KAAKC,MAAMH,GACxBJ,EAASK,EAAMF,EAASK,OAAQ,MAClC,MAAOC,GAELT,EAASI,EAAMD,EAASK,OAAQ,WAI3CE,MAAM,SAASC,GAEZX,EAAS,KAAM,EAAGW,2BChB9Bf,EAAAC,QAAA,CAAkBe,KAAA,wBAAAC,SAAA,wBAAAC,UAAA,0BAAAC,iBAAA,0BAAAC,OAAA,0BAAAC,KAAA,0BAAAC,aAAA,0BAAAC,mBAAA,0BAAAC,KAAA,0BAAAC,uBAAA,0BAAAC,WAAA,0BAAAC,UAAA,0BAAAC,SAAA,0BAAAC,mBAAA,0BAAAC,UAAA,0BAAAC,aAAA,0BAAAC,WAAA,0BAAAC,UAAA,0BAAAC,MAAA,0BAAAC,OAAA,0BAAAC,KAAA,0BAAAC,aAAA,0BAAAC,eAAA,wBAAAC,WAAA,wBAAAC,WAAA,0BAAAC,mBAAA,0BAAAC,kBAAA,wBAAAC,WAAA,0BAAAC,4BAAA,0BAAAC,aAAA,0BAAAC,UAAA,0BAAAC,gBAAA,0BAAAC,WAAA,0BAAAC,YAAA,0BAAAC,sBAAA,0BAAAC,mBAAA,0BAAAC,iBAAA,0BAAAC,YAAA,0BAAAC,SAAA,0BAAAC,gBAAA,wBAAAC,WAAA,0BAAAC,qBAAA,wBAAAC,YAAA,6CCDlB1D,EAAAC,QAAiB0D,EAAAC,EAAuB,yDCAxC5D,EAAAC,QAAiB0D,EAAAC,EAAuB,wDCAxC5D,EAAAC,QAAiB0D,EAAAC,EAAuB,wDCAxC5D,EAAAC,QAAiB0D,EAAAC,EAAuB,4DCAxC5D,EAAAC,QAAiB0D,EAAAC,EAAuB,gLCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iHCjBNC,EAAA,kBAAAC,GAAA,IAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,GAAA,IAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,GAAA,SAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,KAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,EAAA,SAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,IAAA,MAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,IAAAD,EAAAsB,OAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,KAAA,SAAAa,KAAA,SAAAC,KAAA,IAAA5C,EAAA,GAAAyB,EAAAzB,EAAAmB,EAAA,kBAAA0B,OAAA,IAAAC,EAAApC,OAAAqC,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAAnB,EAAAgD,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAA/B,GAAA,SAAAmD,EAAA3C,GAAA,0BAAA4C,QAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,EAAA,SAAAC,GAAA,OAAAqC,KAAAQ,QAAA9C,EAAAC,OAAA,SAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,iBAAAA,GAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAiD,QAAAlB,EAAAmB,SAAA/G,KAAA,SAAA8D,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,IAAA,SAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,KAAAZ,EAAAiD,QAAAlB,GAAA5F,KAAA,SAAA8D,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,IAAA,SAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,OAAAE,EAAAe,KAAA,IAAA3B,EAAAK,EAAA+B,KAAA,WAAA7B,MAAA,SAAAR,EAAAI,GAAA,SAAA8C,IAAA,WAAAnD,EAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,KAAA,OAAAA,MAAA/D,KAAAgH,YAAA,SAAAzB,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAmB,MAAA,mCAAA7C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAoD,MAAA,OAAAhD,EAAAiD,OAAA5C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAkD,SAAA,GAAAzC,EAAA,KAAAE,EAAAwC,EAAA1C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,GAAA,YAAAX,EAAAiD,OAAAjD,EAAAoD,KAAApD,EAAAqD,MAAArD,EAAAwB,SAAA,aAAAxB,EAAAiD,OAAA,IAAA/C,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAsD,kBAAAtD,EAAAwB,SAAA,WAAAxB,EAAAiD,QAAAjD,EAAAuD,OAAA,SAAAvD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAxC,EAAAkC,EAAA3B,EAAAE,EAAAG,GAAA,cAAAZ,EAAAmC,KAAA,IAAArB,EAAAF,EAAAgD,KAAAnB,EAAAF,EAAAvC,EAAAoC,MAAAM,EAAA,gBAAA1B,MAAAhB,EAAAoC,IAAAwB,KAAAhD,EAAAgD,MAAA,UAAA5D,EAAAmC,OAAArB,EAAA2B,EAAA7B,EAAAiD,OAAA,QAAAjD,EAAAwB,IAAApC,EAAAoC,OAAA,SAAA2B,EAAAxD,EAAAE,GAAA,IAAAG,EAAAH,EAAAoD,OAAA/C,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAqD,SAAA,eAAAlD,GAAAL,EAAAa,SAAAgD,SAAA3D,EAAAoD,OAAA,SAAApD,EAAA2B,IAAA5B,EAAAuD,EAAAxD,EAAAE,GAAA,UAAAA,EAAAoD,SAAA,WAAAjD,IAAAH,EAAAoD,OAAA,QAAApD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAAzD,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAoD,OAAA,QAAApD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAqD,SAAA,KAAApB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,IAAAyC,MAAAnD,EAAAF,EAAA+D,YAAAnD,EAAAH,MAAAP,EAAAjC,KAAA+B,EAAAgE,QAAA,WAAA9D,EAAAoD,SAAApD,EAAAoD,OAAA,OAAApD,EAAA2B,IAAA5B,GAAAC,EAAAqD,SAAA,KAAApB,GAAAvB,GAAAV,EAAAoD,OAAA,QAAApD,EAAA2B,IAAA,IAAAiC,UAAA,oCAAA5D,EAAAqD,SAAA,KAAApB,GAAA,SAAA8B,EAAAhE,GAAA,IAAAD,EAAA,CAAAkE,OAAAjE,EAAA,SAAAA,IAAAD,EAAAmE,SAAAlE,EAAA,SAAAA,IAAAD,EAAAoE,WAAAnE,EAAA,GAAAD,EAAAqE,SAAApE,EAAA,IAAAqC,KAAAgC,WAAAC,KAAAvE,GAAA,SAAAwE,EAAAvE,GAAA,IAAAD,EAAAC,EAAAwE,YAAA,GAAAzE,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAAwE,WAAAzE,EAAA,SAAAyB,EAAAxB,GAAAqC,KAAAgC,WAAA,EAAAJ,OAAA,SAAAjE,EAAA4C,QAAAoB,EAAA3B,WAAAoC,OAAA,YAAAhC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAA/B,KAAA,OAAA+B,EAAA,IAAA2E,MAAA3E,EAAA4E,QAAA,KAAArE,GAAA,EAAAG,EAAA,SAAAzC,IAAA,OAAAsC,EAAAP,EAAA4E,QAAA,GAAAvE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAAtC,EAAAwC,MAAAT,EAAAO,GAAAtC,EAAAoF,MAAA,EAAApF,EAAA,OAAAA,EAAAwC,MAAAR,EAAAhC,EAAAoF,MAAA,EAAApF,GAAA,OAAAyC,EAAAzC,KAAAyC,GAAA,UAAAoD,iBAAA9D,EAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAAyC,YAAA3D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAA8E,oBAAA,SAAA7E,GAAA,IAAAD,EAAA,mBAAAC,KAAA8E,YAAA,QAAA/E,QAAAoC,GAAA,uBAAApC,EAAA6E,aAAA7E,EAAAgF,QAAAhF,EAAAiF,KAAA,SAAAhF,GAAA,OAAAE,OAAA+E,eAAA/E,OAAA+E,eAAAjF,EAAAoC,IAAApC,EAAAkF,UAAA9C,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,GAAAD,EAAAoF,MAAA,SAAAnF,GAAA,OAAAiD,QAAAjD,IAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,EAAA,kBAAAwB,OAAAtC,EAAA+C,gBAAA/C,EAAAqF,MAAA,SAAApF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,MAAA4E,SAAA,IAAA1E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA8E,oBAAA5E,GAAAU,IAAA3C,OAAA9B,KAAA,SAAA8D,GAAA,OAAAA,EAAAoD,KAAApD,EAAAQ,MAAAG,EAAA3C,UAAA2E,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,EAAA,kBAAA0B,OAAApB,EAAAyB,EAAA,mDAAA3C,EAAAuF,KAAA,SAAAtF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAqE,KAAAlE,GAAA,OAAAH,EAAAsF,UAAA,SAAAvH,IAAA,KAAAiC,EAAA0E,QAAA,KAAA3E,EAAAC,EAAAuF,MAAA,GAAAxF,KAAAD,EAAA,OAAA/B,EAAAwC,MAAAR,EAAAhC,EAAAoF,MAAA,EAAApF,EAAA,OAAAA,EAAAoF,MAAA,EAAApF,IAAA+B,EAAA0C,SAAAjB,EAAArB,UAAA,CAAA2E,YAAAtD,EAAAiD,MAAA,SAAA1E,GAAA,GAAAsC,KAAAoD,KAAA,EAAApD,KAAArE,KAAA,EAAAqE,KAAAmB,KAAAnB,KAAAoB,MAAAzD,EAAAqC,KAAAe,MAAA,EAAAf,KAAAiB,SAAA,KAAAjB,KAAAgB,OAAA,OAAAhB,KAAAT,IAAA5B,EAAAqC,KAAAgC,WAAAzB,QAAA2B,IAAAxE,EAAA,QAAAE,KAAAoC,KAAA,MAAApC,EAAAyF,OAAA,IAAAtF,EAAAyB,KAAAQ,KAAApC,KAAAyE,OAAAzE,EAAA0F,MAAA,MAAAtD,KAAApC,GAAAD,IAAA4F,KAAA,WAAAvD,KAAAe,MAAA,MAAApD,EAAAqC,KAAAgC,WAAA,GAAAG,WAAA,aAAAxE,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,OAAAS,KAAAwD,MAAAnC,kBAAA,SAAA3D,GAAA,GAAAsC,KAAAe,KAAA,MAAArD,EAAA,IAAAE,EAAAoC,KAAA,SAAAyD,EAAA1F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAAjC,KAAAoC,EAAAE,IAAAL,EAAAoD,OAAA,OAAApD,EAAA2B,IAAA5B,KAAAM,EAAA,QAAAA,EAAA+B,KAAAgC,WAAAM,OAAA,EAAArE,GAAA,IAAAA,EAAA,KAAAG,EAAA4B,KAAAgC,WAAA/D,GAAAK,EAAAF,EAAA+D,WAAA,YAAA/D,EAAAwD,OAAA,OAAA6B,EAAA,UAAArF,EAAAwD,QAAA5B,KAAAoD,KAAA,KAAA5E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,IAAAsB,KAAAoD,KAAAhF,EAAAyD,SAAA,OAAA4B,EAAArF,EAAAyD,UAAA,MAAA7B,KAAAoD,KAAAhF,EAAA0D,WAAA,OAAA2B,EAAArF,EAAA0D,iBAAA,GAAAtD,GAAA,GAAAwB,KAAAoD,KAAAhF,EAAAyD,SAAA,OAAA4B,EAAArF,EAAAyD,UAAA,YAAAnD,EAAA,MAAAoC,MAAA,6CAAAd,KAAAoD,KAAAhF,EAAA0D,WAAA,OAAA2B,EAAArF,EAAA0D,gBAAAR,OAAA,SAAA3D,EAAAD,GAAA,QAAAE,EAAAoC,KAAAgC,WAAAM,OAAA,EAAA1E,GAAA,IAAAA,EAAA,KAAAK,EAAA+B,KAAAgC,WAAApE,GAAA,GAAAK,EAAA2D,QAAA5B,KAAAoD,MAAArF,EAAAyB,KAAAvB,EAAA,eAAA+B,KAAAoD,KAAAnF,EAAA6D,WAAA,KAAA1D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAAwD,QAAAlE,MAAAU,EAAA0D,aAAA1D,EAAA,UAAAE,EAAAF,IAAA+D,WAAA,UAAA7D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA4B,KAAAgB,OAAA,OAAAhB,KAAArE,KAAAyC,EAAA0D,WAAAjC,GAAAG,KAAA0D,SAAApF,IAAAoF,SAAA,SAAA/F,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAAU,KAAArE,KAAAgC,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAAU,KAAAwD,KAAAxD,KAAAT,IAAA5B,EAAA4B,IAAAS,KAAAgB,OAAA,SAAAhB,KAAArE,KAAA,kBAAAgC,EAAA2B,MAAA5B,IAAAsC,KAAArE,KAAA+B,GAAAmC,GAAA8D,OAAA,SAAAhG,GAAA,QAAAD,EAAAsC,KAAAgC,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAE,EAAAoC,KAAAgC,WAAAtE,GAAA,GAAAE,EAAAkE,aAAAnE,EAAA,OAAAqC,KAAA0D,SAAA9F,EAAAuE,WAAAvE,EAAAmE,UAAAG,EAAAtE,GAAAiC,IAAAxF,MAAA,SAAAsD,GAAA,QAAAD,EAAAsC,KAAAgC,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAE,EAAAoC,KAAAgC,WAAAtE,GAAA,GAAAE,EAAAgE,SAAAjE,EAAA,KAAAI,EAAAH,EAAAuE,WAAA,aAAApE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA2C,EAAAtE,GAAA,OAAAK,GAAA,MAAA6C,MAAA,0BAAA8C,cAAA,SAAAlG,EAAAE,EAAAG,GAAA,OAAAiC,KAAAiB,SAAA,CAAA1C,SAAA6B,EAAA1C,GAAA+D,WAAA7D,EAAA8D,QAAA3D,GAAA,SAAAiC,KAAAgB,SAAAhB,KAAAT,IAAA5B,GAAAkC,IAAAnC,EAGA,IAAMmG,EAAkB,CACpBC,gBAAe,OAAAC,cAASC,EAAa,KACrCC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAGdC,EAAqB,CACvBC,gBAAiB,2BACjBC,QAAS,OACTC,aAAc,OACdC,UAAW,+BACXC,UAAW,SACXV,MAAO,SAgGgBW,MAzE3B,WAAqB,IAAAC,EACeC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EACIL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EAAWC,cAEXC,EAAW,eAAAC,EAAAC,YAAArI,IAAAkF,KAAG,SAAAoD,IAAA,IAAAC,EAAAlM,EAAAmM,EAAA,OAAAxI,IAAAuB,KAAA,SAAAkH,GAAA,cAAAA,EAAA9C,KAAA8C,EAAAvK,MAAA,OAKf,OAHKqK,EAAc,CAChBZ,SAAUA,EACVI,SAAUA,GACbU,EAAA9C,KAAA,EAAA8C,EAAAvK,KAAA,EAG0B/B,MAAM,mCAAoC,CAC7DoH,OAAQ,OACRmF,QAAS,CACLC,eAAgB,oBAEpB7L,KAAMN,KAAKoM,UAAUL,KACvB,OANY,KAARlM,EAAQoM,EAAA/E,MAQDmF,GAAE,CAAAJ,EAAAvK,KAAA,gBAAAuK,EAAAvK,KAAA,EACQ7B,EAASE,OAAM,OAA5BiM,EAAIC,EAAA/E,KACVoF,QAAQC,IAAIP,GAEZQ,aAAaC,QAAQ,SAAUT,EAAKU,QACpCJ,QAAQC,IAAI,iBAAkBP,EAAKU,QAEnCF,aAAaC,QAAQ,OAAQT,EAAKW,MAClCL,QAAQC,IAAI,cAAeP,EAAKW,MAEhCH,aAAaC,QAAQ,WAAYT,EAAKvD,MACtC6D,QAAQC,IAAI,mBAAoBP,EAAKvD,MAErC+D,aAAaC,QAAQ,QAAST,EAAKY,OACnCN,QAAQC,IAAI,eAAgBP,EAAKY,OAGf,UAAdZ,EAAKW,KACLlB,EAAS,UACY,WAAdO,EAAKW,MACZlB,EAAS,WACZQ,EAAAvK,KAAA,iBAEDmL,MAAM,+DAA+D,QAAAZ,EAAAvK,KAAA,iBAAAuK,EAAA9C,KAAA,GAAA8C,EAAAa,GAAAb,EAAA,SAGzEK,QAAQnM,MAAM,2BAA0B8L,EAAAa,IAAS,yBAAAb,EAAA3C,SAAAwC,EAAA,kBAExD,kBA5CgB,OAAAF,EAAAmB,MAAAhH,KAAAiH,YAAA,GA8CjB,OACIC,IAAAC,cAAA,OAAKC,MAAOvD,GACRqD,IAAAC,cAAA,OAAKC,MAAO3C,GACRyC,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,SACI7H,KAAK,OACL+H,YAAY,WACZlJ,MAAOiH,EACPkC,SAAU,SAAC5J,GAAC,OAAK2H,EAAY3H,EAAE6J,OAAOpJ,UAE1C+I,IAAAC,cAAA,SACI7H,KAAK,WACL+H,YAAY,WACZlJ,MAAOqH,EACP8B,SAAU,SAAC5J,GAAC,OAAK+H,EAAY/H,EAAE6J,OAAOpJ,UAE1C+I,IAAAC,cAAA,UAAQK,QAAS5B,GAAa,2BChHjC6B,EAAO,CAChBC,UAAW,wBACXC,YAAa,0CCEXC,EAAW,CACbC,KAAM,QACNC,aAAc,gBACdC,OAAQ,WAgBZ,SAASC,EAASrO,GACd,IAAID,EAAU,IAAIuO,QAAQR,EAAKC,UAAYE,EAASC,KAAM,CACtD7G,OAAQ,MACRmF,QAAS,CACL+B,cAAe,UAAAnE,OAAY0C,aAAa0B,QAAQ,UAChD/B,eAAgB,sBAExBG,QAAQC,IAAI9M,EAAQ0O,KAEpBC,IAAc5O,eAAeC,EAAS,SAAC4O,EAAQnO,EAAQC,GAC/CA,EACAmM,QAAQnM,MAAM,yBAA0BA,GAExCT,EAAS2O,KAuCrB,SAASC,EAAWV,EAAMlO,GACtB,IAAID,EAAU,IAAIuO,QAAQR,EAAKC,UAAYE,EAASC,KAAO,IAAMA,EAAKW,GAAI,CACtExH,OAAQ,MACRmF,QAAS,CACLsC,OAAU,mBACVrC,eAAgB,oBAEpB7L,KAAMN,KAAKoM,UAAUwB,KAGzBtB,QAAQC,IAAI,QAAU9M,EAAQ0O,KAE9BC,IAAc5O,eAAeC,EAASC,GAkB1C,SAAS+O,EAAW/O,GAChB,IAAID,EAAU,IAAIuO,QAAQR,EAAKE,YAAcC,EAASG,OAAQ,CAC1D/G,OAAQ,MACRmF,QAAS,CACLC,eAAgB,sBAIxBG,QAAQC,IAAI9M,EAAQ0O,KACpBC,IAAc5O,eAAeC,EAASC,yCC5GpCkK,EAAkB,CACpBI,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,OACPuE,UAAW,QACX7E,gBAAe,OAAAC,OAASC,IAAa,KACrCM,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZqE,cAAe,UAGbC,EAAe,CACjBnE,gBAAiB,qBACjBoE,MAAO,QACPnE,QAAS,OACTC,aAAc,OACdE,UAAW,UA6UYiE,MAxU3B,WAAqB,IAAA/D,EACSC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BgE,EAAK9D,EAAA,GAAE+D,EAAQ/D,EAAA,GAAAI,EACQL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAnC4D,EAAO3D,EAAA,GAAE4D,EAAU5D,EAAA,GAAA6D,EACgBnE,mBAAS,SAAQoE,EAAAlE,YAAAiE,EAAA,GAApDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAAuBG,EAC/BvE,mBAAS,IAAGwE,EAAAtE,YAAAqE,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,EAC0D3E,mBAAS,MAAK4E,EAAA1E,YAAAyE,EAAA,GAAjEE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GAAAG,EACV/E,mBAAS,MAAKgF,EAAA9E,YAAA6E,EAAA,GAAlBE,GAAnBD,EAAA,GAAmBA,EAAA,GACFhF,mBAAS,KAAGkF,EAAAhF,YAAA+E,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAGlCG,oBAAU,WACgB,UAAlBhB,EACAtB,EAAS,SAAClO,GACNyM,QAAQC,IAAI,kBAAmB1M,GAC3ByQ,MAAMC,QAAQ1Q,GACdmP,EAASnP,GAETyM,QAAQnM,MAAM,wCAAyCN,KAGtC,YAAlBwP,GAEPtB,EAAS,SAACyC,GACN,GAAIF,MAAMC,QAAQC,GAAe,CAC7B,IAAMC,EAAc,GACpBD,EAAalK,QAAQ,SAAAsH,GACjB6C,EAAY7C,EAAKW,IAAMX,EAAKnF,OAEhCiH,EAAWe,GAGXhC,EAAW,SAACiC,GACJJ,MAAMC,QAAQG,IACdxB,EAAWwB,SAMhC,CAACrB,IAGJ,IAAMsB,EAAoB,SAAClN,EAAGmN,EAAQC,GAAyB,IAAlBC,IAAM9D,UAAA3E,OAAA,QAAA0I,IAAA/D,UAAA,KAAAA,UAAA,GACzC9I,EAAQT,EAAE6J,OAAOpJ,MACnB4M,EACA9B,EAAS,SAAAgC,GAAS,OACdA,EAAUC,IAAI,SAAArD,GAAI,OACdA,EAAKW,KAAOqC,EAAMM,YAAA,GAAQtD,EAAIuD,YAAA,GAAGN,EAAQ3M,IAAU0J,MAI3DsB,EAAW,SAAAkC,GAAW,OAClBA,EAAYH,IAAI,SAAAnD,GAAM,OAClBA,EAAOS,KAAOqC,EAAMM,YAAA,GAAQpD,EAAMqD,YAAA,GAAGN,EAAQ3M,IAAU4J,OAOjEuD,EAAa,SAACC,GAAYtE,UAAA3E,OAAA,QAAA0I,IAAA/D,UAAA,KAAAA,UAAA,GD2BpC,SAAsBc,EAAQpO,GAC1B,IAAID,EAAU,IAAIuO,QAAQR,EAAKE,YAAcC,EAASG,OAAS,IAAMA,EAAOS,GAAI,CAC5ExH,OAAQ,MACRmF,QAAS,CACLsC,OAAU,mBACVrC,eAAgB,oBAEpB7L,KAAMN,KAAKoM,UAAU0B,KAGzBxB,QAAQC,IAAI,QAAU9M,EAAQ0O,KAC9BC,IAAc5O,eAAeC,EAASC,GC5B9B6R,CAAaD,EAAM,SAACzR,EAAUK,GACX,MAAXA,GAA6B,MAAXA,EAClBoM,QAAQC,IAAI,+BAEZD,QAAQnM,MAAM,6BAZtBmO,EAAWgD,EAAM,SAACzR,EAAUK,GACT,MAAXA,GAA6B,MAAXA,EAClBoM,QAAQC,IAAI,6BAEZD,QAAQnM,MAAM,4BAexBqR,EAAe,WAAOxE,UAAA3E,OAAA,QAAA0I,IAAA/D,UAAA,KAAAA,UAAA,GD8ChC,SAA4Bc,EAAQpO,GAChC,IAAID,EAAU,IAAIuO,QAAQR,EAAKE,YAAcC,EAASG,OAAS,sBAAuB,CAClF/G,OAAQ,OACRmF,QAAS,CACLsC,OAAU,mBACVrC,eAAgB,oBAEpB7L,KAAMN,KAAKoM,UAAU0B,KAGzBxB,QAAQC,IAAI,6BAA8B9M,EAAQ0O,KAClDC,IAAc5O,eAAeC,EAASC,GC/B9B+R,CANkB,CACdC,YAAa,YACbC,QAAS,aACTC,2BAA4B,GAC5BC,OAAQ,MAEkB,SAAChS,EAAUK,GACtB,MAAXA,GACAuO,EAAW,SAAC5O,GACJyQ,MAAMC,QAAQ1Q,IACdqP,EAAWrP,KAGnByM,QAAQC,IAAI,iCAEZD,QAAQnM,MAAM,6BDxIlC,SAA4ByN,EAAMlO,GAC9B,IAAID,EAAU,IAAIuO,QAAQR,EAAKC,UAAY,QAAUE,EAASE,aAAc,CACxE9G,OAAQ,OACRmF,QAAS,CACLsC,OAAU,mBACVrC,eAAgB,oBAEpB7L,KAAMN,KAAKoM,UAAUwB,KAEzBQ,IAAc5O,eAAeC,EAASC,GCmG9BoS,CALgB,CACZrJ,KAAM,UACNkE,KAAM,SACNpB,SAAU,UAEc,SAAC1L,EAAUK,GACpB,MAAXA,GACA6N,EAAS,SAAClO,GACFyQ,MAAMC,QAAQ1Q,IACdmP,EAASnP,KAGjByM,QAAQC,IAAI,+BAEZD,QAAQnM,MAAM,4BA0BxB4R,EAAe,SAACnB,GAAc5D,UAAA3E,OAAA,QAAA0I,IAAA/D,UAAA,KAAAA,UAAA,GDrBxC,SAAsBgF,EAAUtS,GAC5B,IAAID,EAAU,IAAIuO,QAAQR,EAAKE,YAAcC,EAASG,OAAS,IAAMkE,EAAU,CAC3EjL,OAAQ,WAGZuF,QAAQC,IAAI,6BAA8B9M,EAAQ0O,KAClDC,IAAc5O,eAAeC,EAASC,GC8B9BuS,CAAarB,EAAQ,SAAC/Q,EAAUK,GACb,MAAXA,GACAgP,EAAW,SAAAkC,GAAW,OAAIA,EAAYc,OAAO,SAAApE,GAAM,OAAIA,EAAOS,KAAOqC,MACrEtE,QAAQC,IAAI,+BAGZkC,EAAW,SAAC5O,GACJyQ,MAAMC,QAAQ1Q,IACdqP,EAAWrP,MAInByM,QAAQnM,MAAM,6BD3IlC,SAAoBuM,EAAQhN,GACxB,IAAID,EAAU,IAAIuO,QAAQR,EAAKC,UAAYE,EAASC,KAAO,IAAMlB,EAAQ,CACrE3F,OAAQ,WAEZqH,IAAc5O,eAAeC,EAASC,GC8G9ByS,CAAWvB,EAAQ,SAAC/Q,EAAUK,GACX,MAAXA,GACA6N,EAAS,SAAClO,GACFyQ,MAAMC,QAAQ1Q,IACdmP,EAASnP,KAGjByM,QAAQC,IAAI,8BAEZD,QAAQnM,MAAM,4BAyD9B,OACI8M,IAAAC,cAAA,OAAKC,MAAOvD,GACRqD,IAAAC,cAAA,OAAKC,MAAOyB,GACR3B,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,SAAG,KAEHD,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQ+B,EAAiB,WAAU,SAClDrC,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQ+B,EAAiB,aAAY,aAGrC,UAAlBD,GACGpC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQiE,GAAa,KAAO,eAC3CvE,IAAAC,cAAA,aACID,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,QAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,QAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,aAGjCnF,IAAAC,cAAA,aACC6B,EAAMkC,IAAI,SAACrD,GAAI,OACZX,IAAAC,cAAA,MAAImF,IAAKzE,EAAKW,IACVtB,IAAAC,cAAA,UACID,IAAAC,cAAA,SACI7H,KAAK,OACLnB,MAAO0J,EAAKnF,KACZ4E,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGmK,EAAKW,GAAI,SAC/C+D,OAAQ,WAAF,OAAQjB,EAAWzD,OAGjCX,IAAAC,cAAA,UACID,IAAAC,cAAA,UACIhJ,MAAO0J,EAAKjB,KACZU,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGmK,EAAKW,GAAI,SAC/C+D,OAAQ,WAAF,OAAQjB,EAAWzD,KAEzBX,IAAAC,cAAA,UAAQhJ,MAAM,SAAQ,SACtB+I,IAAAC,cAAA,UAAQhJ,MAAM,UAAS,YAG/B+I,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQwE,EAAanE,EAAKW,IAAI,KAAO,UACpDtB,IAAAC,cAAA,UAAQK,QAAS,WAAF,OA9EhBb,EA8EkDkB,EAAKW,GA7EtFuB,EAAyBpD,QACzB0D,EAAe,IAFe,IAAC1D,IA8E4D,0BAStFmD,GACG5C,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,SACI7H,KAAK,WACL+H,YAAY,eACZlJ,MAAOiM,EACP9C,SAAU,SAAC5J,GAAC,OAAK2M,EAAe3M,EAAE6J,OAAOpJ,UAE7C+I,IAAAC,cAAA,UAAQK,QAzFW,WAC/B,IAAMgF,EAAexD,EAAMyD,KAAK,SAAA5E,GAAI,OAAIA,EAAKW,KAAOsB,IAChD0C,GAMAjE,EALiB4C,YAAA,GACVqB,EAAY,CACfhH,SAAU4E,IAGU,SAACtQ,EAAUK,GAChB,MAAXA,GACAoM,QAAQC,IAAI,iCACZuD,EAAyB,OAEzBxD,QAAQnM,MAAM,iCA4E+B,UAC7C8M,IAAAC,cAAA,UAAQK,QAtEW,WAC/BuC,EAAyB,MACzBM,EAAe,MAoE0C,WAIlC,YAAlBf,GACGpC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQiE,GAAa,KAAQ,iBACxCvE,IAAAC,cAAA,aACID,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,eAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,WAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,iCAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,QAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,aAGjCnF,IAAAC,cAAA,aACC+B,EAAQgC,IAAI,SAACnD,GAAM,OAChBb,IAAAC,cAAA,MAAImF,IAAKvE,EAAOS,IACZtB,IAAAC,cAAA,UACID,IAAAC,cAAA,SACI7H,KAAK,OACLnB,MAAO4J,EAAO4D,YACdrE,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGqK,EAAOS,GAAI,eAAe,IAChE+D,OAAQ,WAAF,OAAQjB,EAAWvD,GAAQ,OAGzCb,IAAAC,cAAA,UACID,IAAAC,cAAA,SACI7H,KAAK,OACLnB,MAAO4J,EAAO6D,QACdtE,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGqK,EAAOS,GAAI,WAAW,IAC5D+D,OAAQ,WAAF,OAAQjB,EAAWvD,GAAQ,OAGzCb,IAAAC,cAAA,UACID,IAAAC,cAAA,SACI7H,KAAK,SACLnB,MAAO4J,EAAO8D,2BACdvE,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGqK,EAAOS,GAAI,8BAA8B,IAC/E+D,OAAQ,WAAF,OAAQjB,EAAWvD,GAAQ,OAGzCb,IAAAC,cAAA,UACID,IAAAC,cAAA,UACIhJ,MAAO4J,EAAO+D,QAAU,GACxBxE,SAAU,SAAC5J,GAAC,OAAKkN,EAAkBlN,EAAGqK,EAAOS,GAAI,UAAU,IAC3D+D,OAAQ,WAAF,OAAQjB,EAAWvD,GAAQ,KAEjCb,IAAAC,cAAA,UAAQhJ,MAAM,IAAG,cAChBN,OAAOoF,KAAKyG,GAASwB,IAAI,SAACvE,GAAM,OAC7BO,IAAAC,cAAA,UAAQmF,IAAK3F,EAAQxI,MAAOwI,GACvB+C,EAAQ/C,QAKzBO,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAQK,QAAS,WAAF,OAAQwE,EAAajE,EAAOS,IAAI,KAAQ,2BCpVzF3E,EAAkB,CACpBI,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,OACPuE,UAAW,QACX7E,gBAAe,OAAAC,cAASC,EAAa,KACrCM,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZqE,cAAe,UAGbC,EAAe,CACjBnE,gBAAiB,qBACjBoE,MAAO,QACPnE,QAAS,OACTC,aAAc,OACdE,UAAW,UAqEY4H,EAjER,WAAM,IAAA1H,EACSC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCkE,EAAOhE,EAAA,GAAEiE,EAAUjE,EAAA,GACpByH,EAAWlG,aAAa0B,QAAQ,YA+BtC,OA5BA5B,QAAQC,IAAI,uBAIZ8D,oBAAU,WACN,IAAM3D,EAASF,aAAa0B,QAAQ,UACpC5B,QAAQC,IAAI,WAAYG,GAErBA,EFoDX,SAA4BA,EAAQhN,GAChC,IAAID,EAAU,IAAIuO,QAAQR,EAAKE,YAAcC,EAASG,OAAS,SAAWpB,EAAQ,CAC9E3F,OAAQ,QAGZuF,QAAQC,IAAI,eAAgBiB,EAAKE,YAAcC,EAASG,OAAS,SAAWpB,GAI5E0B,IAAc5O,eAAeC,EAASC,GE5D9BiT,CAAmBjG,EAAQ,SAAC7M,GACxByM,QAAQC,IAAI,iBAAkB1M,EAASmM,MACvCnM,EAASyG,QAAQ,SAACwH,GACdxB,QAAQC,IAAI,UAAWuB,KAGvBwC,MAAMC,QAAQ1Q,IACdyM,QAAQC,IAAI,mBAAoB1M,GAChCqP,EAAWrP,IAEXyM,QAAQnM,MAAM,8BAA+BN,KAIrDyM,QAAQnM,MAAM,sCAEnB,IAIC8M,IAAAC,cAAA,OAAKC,MAAOvD,GACRqD,IAAAC,cAAA,OAAKC,MAAOyB,GACR3B,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,SAAG,YAAUwF,EAAS,6BACrBzD,EAAQ5G,OAAS,EACd4E,IAAAC,cAAA,SAAOkF,UAAU,sCACbnF,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,eAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,WAC7BnF,IAAAC,cAAA,MAAIkF,UAAU,gBAAe,mCAGjCnF,IAAAC,cAAA,aACC+B,EAAQgC,IAAI,SAACnD,GAAM,OAChBb,IAAAC,cAAA,MAAImF,IAAKvE,EAAOS,IACZtB,IAAAC,cAAA,UAAKY,EAAO4D,aACZzE,IAAAC,cAAA,UAAKY,EAAO6D,SACZ1E,IAAAC,cAAA,UAAKY,EAAO8D,iCAMxB3E,IAAAC,cAAA,SAAG,4BCjER0F,EAhBM,SAAHhH,GAA4B,IAAtBiH,EAAQjH,EAARiH,SAAUC,EAAKlH,EAALkH,MACxBnG,EAAOH,aAAa0B,QAAQ,QAIlC,OAHiC,OAATvB,EAOpBmG,IAAUA,EAAMC,SAASpG,GAClBM,IAAAC,cAAC8F,IAAQ,CAACC,GAAG,kBAGjBJ,EAPI5F,IAAAC,cAAC8F,IAAQ,CAACC,GAAG,YCMbC,MAZf,WACI,OACIjG,IAAAC,cAAA,OAAKkF,UAAU,0BACXnF,IAAAC,cAAA,OAAKkF,UAAU,wBACXnF,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAG,oDACHD,IAAAC,cAAA,SAAG,sICIbiG,EAAY,CACdtE,MAAO,QACPuE,eAAgB,QA+BLC,EA5BO,WAAH,OACfpG,IAAAC,cAAA,WACID,IAAAC,cAACoG,IAAM,CAACzE,MAAM,OAAO0E,OAAK,EAACC,OAAO,MAC9BvG,IAAAC,cAACuG,IAAW,CAACC,KAAK,KACdzG,IAAAC,cAAA,OAAKyG,IAAKC,IAAMzJ,MAAO,KAClBC,OAAQ,QAEjB6C,IAAAC,cAAC2G,IAAG,CAACzB,UAAU,UAAU0B,QAAM,GAE3B7G,IAAAC,cAAC6G,IAAoB,CAACC,KAAG,EAACC,UAAQ,GAC9BhH,IAAAC,cAACgH,IAAc,CAAC/G,MAAOgG,EAAWa,KAAG,EAACG,OAAK,GAAC,QAG5ClH,IAAAC,cAACkH,IAAY,CAACC,OAAK,GAEfpH,IAAAC,cAACoH,IAAY,KACTrH,IAAAC,cAACqH,IAAO,CAACb,KAAK,UAAS,+FC/B7C9J,GAAkB,CACpBI,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBC,MAAO,OACPC,OAAQ,QACRP,gBAAe,OAAAC,OAASC,KAAa,KACrCM,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBM,UAAW,UAGTsI,GAAY,CACdtE,MAAO,QACP2F,WAAY,uBAsBDC,GAnBL,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAA5O,KAAA0O,GAAAG,YAAA7O,KAAA8O,YAAAJ,GAAA1H,MAAAhH,KAAAiH,YAgBL,OAhBK8H,aAAAL,EAAAC,GAAAK,YAAAN,EAAA,EAAApC,IAAA,SAAAnO,MAAA,WAEF,OACI+I,IAAAC,cAAA,WACID,IAAAC,cAAC8H,KAAS,CAACC,OAAK,EAAC9H,MAAOvD,IACpBqD,IAAAC,cAACgI,KAAS,CAACD,OAAK,GACZhI,IAAAC,cAAA,MAAIkF,UAAU,YAAYjF,MAAOgG,IAAW,4BAG5ClG,IAAAC,cAAA,KAAGkF,UAAU,OAAOjF,MAAOgG,IACvBlG,IAAAC,cAAA,SAAG,kGAM1BuH,EAhBK,CAASxH,IAAMkI,WCZVC,GAPA,SAAAV,GAAA,SAAAU,IAAA,OAAAT,YAAA5O,KAAAqP,GAAAR,YAAA7O,KAAA8O,YAAAO,GAAArI,MAAAhH,KAAAiH,YAIV,OAJU8H,aAAAM,EAAAV,GAAAK,YAAAK,EAAA,EAAA/C,IAAA,SAAAnO,MAAA,WAGH,OAAO+I,IAAAC,cAAA,MAAIkF,UAAWiD,IAAOrU,YAAY,uBAChDoU,EAJU,CAASnI,IAAMkI,WC+DfG,OA9Cf,WAEQ,IAAMC,EAAmD,OAAjC/I,aAAa0B,QAAQ,QAE7C,OACIjB,IAAAC,cAAA,OAAKkF,UAAWiD,IAAOvU,MACvBmM,IAAAC,cAACsI,IAAM,KACHvI,IAAAC,cAAA,WACID,IAAAC,cAACmG,EAAa,MACdpG,IAAAC,cAACuI,IAAM,KAEHxI,IAAAC,cAACwI,IAAK,CAACC,KAAK,SAASC,QAAS3I,IAAAC,cAACpC,EAAS,QAGxCmC,IAAAC,cAACwI,IAAK,CACFC,KAAK,SACLC,QACI3I,IAAAC,cAAC0F,EAAY,CAACE,MAAO,CAAC,UAClB7F,IAAAC,cAAC4B,EAAS,SAItB7B,IAAAC,cAACwI,IAAK,CACFC,KAAK,UACLC,QACI3I,IAAAC,cAAC0F,EAAY,CAACE,MAAO,CAAC,WAClB7F,IAAAC,cAACuF,EAAU,SAMvBxF,IAAAC,cAACwI,IAAK,CAACC,KAAK,IAAIC,QAASL,EAAkBtI,IAAAC,cAACuH,GAAI,MAAMxH,IAAAC,cAAC8F,IAAQ,CAACC,GAAG,aACnEhG,IAAAC,cAACwI,IAAK,CAACC,KAAK,SAASC,QAAS3I,IAAAC,cAACkI,GAAS,QAGxCnI,IAAAC,cAACwI,IAAK,CAACC,KAAK,gBAAgBC,QAAS3I,IAAAC,cAACgG,EAAgB,QACtDjG,IAAAC,cAACwI,IAAK,CAACC,KAAK,IAAIC,QAAS3I,IAAAC,cAACgG,EAAgB,QAAO,eChDzE2C,IAASC,OACL7I,IAAAC,cAACoI,GAAG,MACJS,SAASC,eAAe,SZgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvW,KAAK,SAAAwW,GACjCA,EAAaC","file":"static/js/main.634a0388.chunk.js","sourcesContent":["function performRequest(request, callback) {\n    fetch(request)\n        .then(function(response) {\n            // Incearca sa obtii raspunsul ca text\n            return response.text().then((text) => {\n                try {\n                    // Incearca sa parsezi raspunsul ca JSON\n                    const json = JSON.parse(text);\n                    callback(json, response.status, null);\n                } catch (error) {\n                    // Dacă raspunsul nu este JSON, trimite-l ca text\n                    callback(text, response.status, null);\n                }\n            });\n        })\n        .catch(function(err) {\n            // prinde orice altă eroare neașteptata si seteaza codul de eroare la 1\n            callback(null, 1, err);\n        });\n}\n\nmodule.exports = {\n    performRequest\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"UmJTOWSKy-HWmq-pqcHSd\",\"dropdown\":\"OT6E0rQDwmYzRLXCAUQQL\",\"pagetitle\":\"_10gn_egFV0u_9FAQ-43RG8\",\"generalcontainer\":\"_32L1Km8TUeW2wspK9pBSNz\",\"divBtn\":\"_1H5wCjHSqqeCXePXcWr2OP\",\"home\":\"_2eWXD4KoeYTh6kD5Zi0jff\",\"chartdisplay\":\"_23TadnH-Fh8ri1xSnX1Nro\",\"background-image\":\"_3jtU7X0aqwCK7t6M-Kp5Dt\",\"back\":\"_3YJstcmoC95Hq_tUL00gh1\",\"titleSubtitleContainer\":\"_3YdExw9ZxfkuKDaa17fqdJ\",\"errorTitle\":\"_3SjkQ8ZsbAiryOLaxETcrO\",\"errorText\":\"_1-Z1MGBzc1Ii7atRt7qcHr\",\"subtitle\":\"_3YSLKa4uecff4aQYd6S9_U\",\"cardLabelContainer\":\"_23x2SpqFJfaZ0KrIot-SFd\",\"cardLabel\":\"_3UW1R88s9peKLlT8XFvB3U\",\"cardSubtitle\":\"_2R0ixKhJM99iY30bqVeCFs\",\"charttitle\":\"_2Q8KE0dYSXJ6xOHvF6sNBw\",\"paragraph\":\"_1FYq7n6DwPDyT6kbAfVzV_\",\"title\":\"_30JskIh9rUAubzlT1G9KNR\",\"search\":\"_3a9o_1bU32au1uNKUNMDGW\",\"next\":\"_1tkoANHxcaA-uSJZoUagxy\",\"leftUpCorner\":\"_3NjWuXTcABoZ6GzYVsklZ0\",\"leftDownCorner\":\"yy9xV12Sw9be3gumtuG9c\",\"chartTitle\":\"tNrF7b-E9hMVXuZlz1ZAy\",\"chartLabel\":\"_3IMygTlrtbXL2fpNA9SoRw\",\"rightAllignelement\":\"_234jviSlXnpoecIAntBa22\",\"leftAllignelement\":\"G5lLFygu5nkaau5UX1WiS\",\"rowDisplay\":\"_3D8Dn_wWy7xxFBnkxU-RiX\",\"referencePricesGraphDisplay\":\"_3TDN9g8sLxMT078ZXvMOyC\",\"middleAllign\":\"_35wMg31hNhXxXOkyGOmxv2\",\"container\":\"_1n4LUy54iUi-TOuMvg5saa\",\"parentOf2Tables\":\"_2zL712TIp25lFXUY_r0tmB\",\"leftCorner\":\"_1vxLJhH9Rl6pZZHeeFd5dL\",\"rightCorner\":\"_2HwB7Fx5qbOtXcoEiBaygr\",\"columnDisplayDayAhead\":\"_1VVMr-dxnOPd0_XdFYKqgr\",\"monitoredDataTable\":\"_2qONaV7IqbnLZl7I_e0FIc\",\"placeOrderButton\":\"_2SmJC1igVSU_DWvPMxrXvq\",\"tablesInRow\":\"_2FLSqbYJNL4ybTvgTnhf_L\",\"rowStyle\":\"_1GYT0O2FXzJKlLehY8ro32\",\"marginForColumn\":\"crwkUCVA2fI8cvyANKy3U\",\"cardMargin\":\"_1-9Zmul-SJhol8Dy7f8RoL\",\"rightPositionedTable\":\"Gen3C7pDBY0z2q0eABd5W\",\"tableColors\":\"AKsKyx4e_s3LCPHFANNCf\"};","module.exports = __webpack_public_path__ + \"static/media/image0_0.a45dd3d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dalle3.ac64e015.webp\";","module.exports = __webpack_public_path__ + \"static/media/Dalle2.2ad3c14c.webp\";","module.exports = __webpack_public_path__ + \"static/media/TsunamyIcon.8fb6ada8.png\";","module.exports = __webpack_public_path__ + \"static/media/Dalle1.ea688ed9.webp\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and person)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BackgroundImg from '../commons/images/image0_0.jpg';\r\n\r\nconst backgroundStyle = {\r\n    backgroundImage: `url(${BackgroundImg})`,\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n};\r\n\r\nconst formContainerStyle = {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    textAlign: 'center',\r\n    width: '300px',\r\n};\r\n\r\nconst inputStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n};\r\n\r\nconst buttonStyle = {\r\n    width: '100%',\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: 'none',\r\n    backgroundColor: '#007bff',\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    margin: '10px 0',\r\n};\r\n\r\n\r\nfunction LoginPage() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async () => {\r\n        // Corpul cererii de autentificare\r\n        const requestBody = {\r\n            username: username,\r\n            password: password,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8081/user/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestBody),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data);  // Verifica daca `data` contine `userId`\r\n                // Salveaza detalile userului in localStorage\r\n                localStorage.setItem('userId', data.userId);\r\n                console.log(\"User ID saved:\", data.userId);\r\n\r\n                localStorage.setItem('role', data.role); //salvam rolul\r\n                console.log(\"Role saved:\", data.role);\r\n\r\n                localStorage.setItem('userName', data.name); //salvam numele\r\n                console.log(\"User Name saved:\", data.name);\r\n\r\n                localStorage.setItem('token', data.token); //salvam token (deocamdata nefolosit)\r\n                console.log(\"Token saved:\", data.token);\r\n\r\n                // Redirectioneaza la pagina corespunzatoare rolului\r\n                if (data.role === 'ADMIN') {\r\n                    navigate('/admin');\r\n                } else if (data.role === 'CLIENT') {\r\n                    navigate('/client');\r\n                }\r\n            } else {\r\n                alert('Autentificare esuata. Va rugam sa verificati credentialele.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Eroare la autentificare:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={backgroundStyle}>\r\n            <div style={formContainerStyle}>\r\n                <h1>Login</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <button onClick={handleLogin}>Login</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n            export default LoginPage;\r\n","export const HOST = {\n    users_api: 'http://localhost:8081',    // URL pentru users-app\n    devices_api: 'http://localhost:8082'   // URL pentru devices-app\n\n    //users_api: 'http://users-app:8080',\n    //devices_api: 'http://devices-app:8080',\n\n    //users_api: 'http://localhost:4200/users',  // URL pentru users-backend prin nginx\n    //devices_api: 'http://localhost:4200/devices' // URL pentru devices-backend prin nginx\n\n};\n","import {HOST} from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\n\n\nconst endpoint = {\n    user: '/user',\n    userWithSync: '/userWithSync',  // Endpoint pentru sincronizare\n    device: '/device' //Endpoint pentru dispozitive\n};\n\n// Inserare utilizator cu sincronizare\nfunction insertUserWithSync(user, callback) {\n    let request = new Request(HOST.users_api + '/user' + endpoint.userWithSync, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction getUsers(callback) {\n    let request = new Request(HOST.users_api + endpoint.user, {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Content-Type': 'application/json'},\n    });\n    console.log(request.url);\n    //RestApiClient.performRequest(request, callback);\n    RestApiClient.performRequest(request, (result, status, error) => {\n        if (error) {\n            console.error(\"Error during getUsers:\", error);\n        } else {\n            callback(result);\n        }\n    });\n}\n\n// Functia pentru stergerea utilizatorului\nfunction deleteUser(userId, callback) {\n    let request = new Request(HOST.users_api + endpoint.user + '/' + userId, {\n        method: 'DELETE'\n    });\n    RestApiClient.performRequest(request, callback);\n}\n\n\nfunction getUserById(params, callback){\n    let request = new Request(HOST.users_api + endpoint.user + params.id, {\n       method: 'GET'\n    });\n\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction postUser(user, callback){\n    let request = new Request(HOST.users_api + endpoint.user , {\n        method: 'POST',\n        headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\n\nfunction updateUser(user, callback) {\n    let request = new Request(HOST.users_api + endpoint.user + '/' + user.id, {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\n\n// Functie pentru a prelua dispozitivele asociate unui utilizator\nfunction getDevicesByUserId(userId, callback) {\n    let request = new Request(HOST.devices_api + endpoint.device + '/user/' + userId, {\n        method: 'GET',\n    });\n\n    console.log(\"Request URL:\", HOST.devices_api + endpoint.device + '/user/' + userId);\n\n    //console.log(\"Request URL:\", request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\n// Functia pentru a obtine toate dispozitivele\nfunction getDevices(callback) {\n    let request = new Request(HOST.devices_api + endpoint.device, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    });\n\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\n// Functia pentru a actualiza un dispozitiv\nfunction updateDevice(device, callback) {\n    let request = new Request(HOST.devices_api + endpoint.device + '/' + device.id, {\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(device)\n    });\n\n    console.log(\"URL: \" + request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\n// Functia pentru stergerea unui dispozitiv\nfunction deleteDevice(deviceId, callback) {\n    let request = new Request(HOST.devices_api + endpoint.device + '/' + deviceId, {\n        method: 'DELETE',\n    });\n\n    console.log(\"Delete Device Request URL:\", request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\n// Inserare dispozitiv\nfunction insertDevice(device, callback) {\n    let request = new Request(HOST.devices_api +'/device' +'/insertDeviceForUser', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(device),\n    });\n\n    console.log(\"Insert Device Request URL:\", request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\n// Functia pentru inserarea unui dispozitiv fără userID\nfunction insertDeviceNoUser(device, callback) {\n    let request = new Request(HOST.devices_api + endpoint.device + \"/insertDeviceNoUser\", {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(device),\n    });\n\n    console.log(\"Insert Device Request URL:\", request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\n\n\nexport {\n    insertUserWithSync,\n    deleteUser,\n    getUsers,\n    getUserById,\n    postUser,\n    updateUser,\n    getDevicesByUserId,\n    getDevices,\n    updateDevice,\n    deleteDevice,\n    insertDevice,\n    insertDeviceNoUser\n};\n","import React, { useEffect, useState } from 'react';\r\nimport { getUsers, updateUser, deleteUser, getDevices, updateDevice, deleteDevice, insertUserWithSync, insertDevice,insertDeviceNoUser } from '../user/api/user-api';\r\nimport BackgroundImg from '../commons/images/Dalle3.webp';\r\nimport '../commons/styles/project-style.css';\r\n\r\n\r\nconst backgroundStyle = {\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    backgroundImage: `url(${BackgroundImg})`,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n};\r\n\r\nconst contentStyle = {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    color: 'white',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    textAlign: 'center'\r\n};\r\n\r\n\r\n\r\nfunction AdminPage() {\r\n    const [users, setUsers] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [activeSection, setActiveSection] = useState('users'); // State pentru sectiunea activa: \"users\" sau \"devices\"\r\n    const [userMap, setUserMap] = useState({});\r\n\r\n    // Pentru schimbarea parolei\r\n    const [editingPasswordUserId, setEditingPasswordUserId] = useState(null);\r\n    const [selectedUserId, setSelectedUserId] = useState(null);\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n    // Fetch users or devices based on active section\r\n    useEffect(() => {\r\n        if (activeSection === 'users') {\r\n            getUsers((response) => {\r\n                console.log(\"Users response:\", response);\r\n                if (Array.isArray(response)) {\r\n                    setUsers(response);\r\n                } else {\r\n                    console.error(\"Unexpected response format for users:\", response);\r\n                }\r\n            });\r\n        } else if (activeSection === 'devices') {\r\n            // Get users first to create the mapping\r\n            getUsers((userResponse) => {\r\n                if (Array.isArray(userResponse)) {\r\n                    const userMapTemp = {};\r\n                    userResponse.forEach(user => {\r\n                        userMapTemp[user.id] = user.name;\r\n                    });\r\n                    setUserMap(userMapTemp);\r\n\r\n                    // Then get devices\r\n                    getDevices((deviceResponse) => {\r\n                        if (Array.isArray(deviceResponse)) {\r\n                            setDevices(deviceResponse);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }, [activeSection]);\r\n\r\n    // Handle changes in the table inputs\r\n    const handleInputChange = (e, itemId, field, isUser = true) => {\r\n        const value = e.target.value;\r\n        if (isUser) {\r\n            setUsers(prevUsers =>\r\n                prevUsers.map(user =>\r\n                    user.id === itemId ? { ...user, [field]: value } : user\r\n                )\r\n            );\r\n        } else {\r\n            setDevices(prevDevices =>\r\n                prevDevices.map(device =>\r\n                    device.id === itemId ? { ...device, [field]: value } : device\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    // Update in the backend\r\n    const handleBlur = (item, isUser = true) => {\r\n        if (isUser) {\r\n            updateUser(item, (response, status) => {\r\n                if (status === 200 || status === 201) {\r\n                    console.log(\"User updated successfully\");\r\n                } else {\r\n                    console.error(\"Failed to update user\");\r\n                }\r\n            });\r\n        } else {\r\n            updateDevice(item, (response, status) => {\r\n                if (status === 200 || status === 201) {\r\n                    console.log(\"Device updated successfully\");\r\n                } else {\r\n                    console.error(\"Failed to update device\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handle insertion of users or devices with default values\r\n    const handleInsert = (isUser = true) => {\r\n        if (isUser) {\r\n            const newUser = {\r\n                name: \"NewUser\",\r\n                role: \"CLIENT\",\r\n                password: \"parola\" // Parola implicita\r\n            };\r\n            insertUserWithSync(newUser, (response, status) => {\r\n                if (status === 201) {\r\n                    getUsers((response) => {\r\n                        if (Array.isArray(response)) {\r\n                            setUsers(response);\r\n                        }\r\n                    });\r\n                    console.log(\"User inserted successfully\");\r\n                } else {\r\n                    console.error(\"Failed to insert user\");\r\n                }\r\n            });\r\n        } else {\r\n            const newDevice = {\r\n                description: \"DeviceNew\",\r\n                address: \"NewAddress\",\r\n                maxHourlyEnergyConsumption: 10,\r\n                userID: null // Default unassigned\r\n            };\r\n            insertDeviceNoUser(newDevice, (response, status) => {\r\n                if (status === 201) {\r\n                    getDevices((response) => {\r\n                        if (Array.isArray(response)) {\r\n                            setDevices(response);\r\n                        }\r\n                    });\r\n                    console.log(\"Device inserted successfully\");\r\n                } else {\r\n                    console.error(\"Failed to insert device\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n// Handle deletion of users or devices\r\n    const handleDelete = (itemId, isUser = true) => {\r\n        if (isUser) {\r\n            deleteUser(itemId, (response, status) => {\r\n                if (status === 200) {\r\n                    getUsers((response) => {\r\n                        if (Array.isArray(response)) {\r\n                            setUsers(response);\r\n                        }\r\n                    });\r\n                    console.log(\"User deleted successfully\");\r\n                } else {\r\n                    console.error(\"Failed to delete user\");\r\n                }\r\n            });\r\n        } else {\r\n            deleteDevice(itemId, (response, status) => {\r\n                if (status === 204) {\r\n                    setDevices(prevDevices => prevDevices.filter(device => device.id !== itemId));\r\n                    console.log(\"Device deleted successfully\");\r\n\r\n                    // Re-fetch devices list to confirm the latest data\r\n                    getDevices((response) => {\r\n                        if (Array.isArray(response)) {\r\n                            setDevices(response);\r\n                        }\r\n                    });\r\n                } else {\r\n                    console.error(\"Failed to delete device\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    // Handle password change button click\r\n    const handleChangePasswordClick = (userId) => {\r\n        setEditingPasswordUserId(userId);\r\n        setNewPassword('');\r\n    };\r\n\r\n\r\n    // Handle password change submission\r\n    const handleSubmitPasswordChange = () => {\r\n        const userToUpdate = users.find(user => user.id === editingPasswordUserId);\r\n        if (userToUpdate) {\r\n            const updatedUser = {\r\n                ...userToUpdate,\r\n                password: newPassword  // Setăm noua parolă\r\n            };\r\n\r\n            updateUser(updatedUser, (response, status) => {\r\n                if (status === 200) {\r\n                    console.log(\"Password updated successfully\");\r\n                    setEditingPasswordUserId(null);  // Ascundem caseta după succesul schimbării parolei\r\n                } else {\r\n                    console.error(\"Failed to update password\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n// Functia pentru a ascunde casuta de schimbare a parolei\r\n    const handleCancelPasswordChange = () => {\r\n        setEditingPasswordUserId(null);\r\n        setNewPassword('');\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={backgroundStyle}>\r\n            <div style={contentStyle}>\r\n                <h1>Admin Dashboard</h1>\r\n                <p> </p>\r\n\r\n                <div>\r\n                    <button onClick={() => setActiveSection('users')}>Users</button>\r\n                    <button onClick={() => setActiveSection('devices')}>Devices</button>\r\n                </div>\r\n            </div>\r\n                {activeSection === 'users' && (\r\n                    <div>\r\n                        <button onClick={() => handleInsert(true)}>Insert User</button>\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"table-header\">Name</th>\r\n                                <th className=\"table-header\">Role</th>\r\n                                <th className=\"table-header\">Actions</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {users.map((user) => (\r\n                                <tr key={user.id}>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={user.name}\r\n                                            onChange={(e) => handleInputChange(e, user.id, 'name')}\r\n                                            onBlur={() => handleBlur(user)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <select\r\n                                            value={user.role}\r\n                                            onChange={(e) => handleInputChange(e, user.id, 'role')}\r\n                                            onBlur={() => handleBlur(user)}\r\n                                        >\r\n                                            <option value=\"ADMIN\">ADMIN</option>\r\n                                            <option value=\"CLIENT\">CLIENT</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button onClick={() => handleDelete(user.id, true)}>Delete</button>\r\n                                        <button onClick={() => handleChangePasswordClick(user.id)}>Change Password</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n            {editingPasswordUserId && (\r\n                <div>\r\n                    <h3>Change Password</h3>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"New Password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                    <button onClick={handleSubmitPasswordChange}>Submit</button>\r\n                    <button onClick={handleCancelPasswordChange}>Cancel</button>\r\n                </div>\r\n            )}\r\n\r\n            {activeSection === 'devices' && (\r\n                <div>\r\n                    <button onClick={() => handleInsert(false)}>Insert Device</button>\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"table-header\">Description</th>\r\n                                <th className=\"table-header\">Address</th>\r\n                                <th className=\"table-header\">Max Hourly Energy Consumption</th>\r\n                                <th className=\"table-header\">User</th>\r\n                                <th className=\"table-header\">Actions</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {devices.map((device) => (\r\n                                <tr key={device.id}>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={device.description}\r\n                                            onChange={(e) => handleInputChange(e, device.id, 'description', false)}\r\n                                            onBlur={() => handleBlur(device, false)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={device.address}\r\n                                            onChange={(e) => handleInputChange(e, device.id, 'address', false)}\r\n                                            onBlur={() => handleBlur(device, false)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={device.maxHourlyEnergyConsumption}\r\n                                            onChange={(e) => handleInputChange(e, device.id, 'maxHourlyEnergyConsumption', false)}\r\n                                            onBlur={() => handleBlur(device, false)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <select\r\n                                            value={device.userID || ''}\r\n                                            onChange={(e) => handleInputChange(e, device.id, 'userID', false)}\r\n                                            onBlur={() => handleBlur(device, false)}\r\n                                        >\r\n                                            <option value=\"\">Unassigned</option>\r\n                                            {Object.keys(userMap).map((userId) => (\r\n                                                <option key={userId} value={userId}>\r\n                                                    {userMap[userId]}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button onClick={() => handleDelete(device.id, false)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            );\r\n            }\r\n\r\n            export default AdminPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getDevicesByUserId } from '../user/api/user-api'; // Aici am importat functia\r\nimport BackgroundImg from '../commons/images/Dalle2.webp';\r\nimport '../commons/styles/project-style.css';\r\n\r\nconst backgroundStyle = {\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    backgroundImage: `url(${BackgroundImg})`,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column'\r\n};\r\n\r\nconst contentStyle = {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n    color: 'white',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    textAlign: 'center'\r\n};\r\n\r\n\r\nconst ClientPage = () => {\r\n    const [devices, setDevices] = useState([]);\r\n    const userName = localStorage.getItem('userName'); // Obtinem numele utilizatorului din localStorage\r\n\r\n    //verificam ca pagina ClientPage se randeaza corect\r\n    console.log(\"ClientPage rendered\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId'); // Se obtine userId din localStorage\r\n        console.log(\"User ID:\", userId); // Verifica daca userId este corect\r\n\r\n        if(userId) {\r\n            getDevicesByUserId(userId, (response) => {\r\n                console.log(\"Data Response:\", response.data);// Verifica raspunsul primit\r\n                response.forEach((device) => {\r\n                    console.log(\"Device:\", device);\r\n                });\r\n\r\n                if (Array.isArray(response)) {\r\n                    console.log(\"Setting devices:\", response);\r\n                    setDevices(response);\r\n                } else {\r\n                    console.error(\"Unexpected response format:\", response);\r\n                }\r\n            });\r\n        } else {\r\n            console.error(\"User ID not found in localStorage\");\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div style={backgroundStyle}>\r\n            <div style={contentStyle}>\r\n                <h1>Client Dashboard</h1>\r\n                <p>Welcome, {userName} ! Here are your devices:</p>\r\n                {devices.length > 0 ? (\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th className=\"table-header\">Description</th>\r\n                            <th className=\"table-header\">Address</th>\r\n                            <th className=\"table-header\">Max Hourly Energy Consumption</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {devices.map((device) => (\r\n                            <tr key={device.id}>\r\n                                <td>{device.description}</td>\r\n                                <td>{device.address}</td>\r\n                                <td>{device.maxHourlyEnergyConsumption}</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p>No devices available.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n            );\r\n            };\r\n\r\n            export default ClientPage;\r\n","// PrivateRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ children, roles }) => {\r\n    const role = localStorage.getItem('role');\r\n    const isAuthenticated = role !== null;\r\n\r\n    // Verificam daca utilizatorul este autentificat si daca are rolul potrivit\r\n    if (!isAuthenticated) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (roles && !roles.includes(role)) {\r\n        return <Navigate to=\"/unauthorized\" />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// UnauthorizedPage.js\r\nimport React from 'react';\r\nimport '../commons/styles/project-style.css';\r\n\r\nfunction UnauthorizedPage() {\r\n    return (\r\n        <div className=\"unauthorized-container\">\r\n            <div className=\"unauthorized-message\">\r\n                <h1>Acces neautorizat</h1>\r\n                <p>Nu aveti permisiunea de a accesa aceasta pagina.</p>\r\n                <p>Va rugam sa va autentificati cu un cont valid.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnauthorizedPage;\r\n","import React from 'react'\nimport logo from './commons/images/TsunamyIcon.png';\n\nimport {\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavLink,\n    UncontrolledDropdown\n} from 'reactstrap';\n\nconst textStyle = {\n    color: 'white',\n    textDecoration: 'none'\n};\n\nconst NavigationBar = () => (\n    <div>\n        <Navbar color=\"dark\" light expand=\"md\">\n            <NavbarBrand href=\"/\">\n                <img src={logo} width={\"50\"}\n                     height={\"35\"} />\n            </NavbarBrand>\n            <Nav className=\"mr-auto\" navbar>\n\n                <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle style={textStyle} nav caret>\n                       Menu\n                    </DropdownToggle>\n                    <DropdownMenu right >\n\n                        <DropdownItem>\n                            <NavLink href=\"/login\">Login</NavLink>\n                        </DropdownItem>\n\n\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n\n            </Nav>\n        </Navbar>\n    </div>\n);\n\nexport default NavigationBar\n","import React from 'react';\nimport BackgroundImg from '../commons/images/Dalle1.webp';\nimport { Container, Jumbotron } from 'reactstrap';\n\nconst backgroundStyle = {\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: \"100%\",\n    height: \"100vh\", // ajustat pentru a se potrivi mai bine pe ecran\n    backgroundImage: `url(${BackgroundImg})`,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center'\n};\n\nconst textStyle = {\n    color: 'white',\n    textShadow: '2px 2px 4px #000000' // umbra pentru contur negru\n};\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <Jumbotron fluid style={backgroundStyle}>\n                    <Container fluid>\n                        <h1 className=\"display-3\" style={textStyle}>\n                            Energy Management System\n                        </h1>\n                        <p className=\"lead\" style={textStyle}>\n                            <b>Enabling smart energy consumption and control for an efficient and sustainable future.</b>\n                        </p>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react'\nimport styles from '../styles/project-style.css';\n\nclass ErrorPage extends React.Component {\n\n    render() {\n            return <h3 className={styles.errorTitle}>Page not found.</h3>;\n    }\n}\n\nexport default ErrorPage\n","import React from 'react'\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage';\nimport AdminPage from './pages/AdminPage';\nimport ClientPage from './pages/ClientPage';\nimport PrivateRoute from './user/components/PrivateRoute';\nimport UnauthorizedPage from './pages/UnauthorizedPage';\n\n\nimport NavigationBar from './navigation-bar'\nimport Home from './home/home';\nimport styles from './commons/styles/project-style.css';\nimport ErrorPage from './commons/errorhandling/error-page';\n\n/*\nimport UserContainer from './user/user-container'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n */\n\nfunction App(){\n\n        const isAuthenticated = localStorage.getItem('role') !== null;\n\n        return (\n            <div className={styles.back}>\n            <Router>\n                <div>\n                    <NavigationBar />\n                    <Routes>\n                        {/* Ruta pentru Login */}\n                        <Route path=\"/login\" element={<LoginPage/>} />\n\n                        {/* Rute protejate pentru admin si client */}\n                        <Route\n                            path=\"/admin\"\n                            element={\n                                <PrivateRoute roles={['ADMIN']}>\n                                    <AdminPage />\n                                </PrivateRoute>\n                            }\n                        />\n                        <Route\n                            path=\"/client\"\n                            element={\n                                <PrivateRoute roles={['CLIENT']}>\n                                    <ClientPage />\n                                </PrivateRoute>\n                            }\n                        />\n\n                        {/* ruta Home */}\n                        <Route path=\"/\" element={isAuthenticated ? <Home /> : <Navigate to=\"/login\" />} />\n                        <Route path=\"/error\" element={<ErrorPage />} />\n\n                        {/* Ruta pentru pagini inexistente/acces neautorizat */}\n                        <Route path=\"/unauthorized\" element={<UnauthorizedPage />} />\n                        <Route path=\"*\" element={<UnauthorizedPage />} /> {/* Redirectioneaza la Unauthorized daca ruta nu este gasita */}\n\n                    </Routes>\n                </div>\n            </Router>\n            </div>\n        )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './app'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}